openapi: 3.0.0
info:
  title: Social Media Express API
  version: 1.0.0
  description: Projet Web-API M1 DFS

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string

paths:
  /api/article:
    get:
      summary: Get all articles
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of all articles
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      type: object
        '500':
          description: Execution error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/article/getAllByContent/{id}:
    get:
      summary: Get articles by content ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of articles for the specified content
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
        '400':
          description: Bad request - contentId required
        '500':
          description: Server error

  /api/article/getAllByUser/{id}:
    get:
      summary: Get articles by user ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of articles for the specified user
          content:
            application/json:
              schema:
                type: object
                properties:
                  articles:
                    type: array
                    items:
                      type: object
        '400':
          description: Bad request
        '500':
          description: Server error

  /api/article/get/{id}:
    get:
      summary: Get article by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article details
          content:
            application/json:
              schema:
                type: object
                properties:
                  article:
                    type: object
        '400':
          description: Bad request
        '500':
          description: Server error

  /api/article/create:
    post:
      summary: Create a new article
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
                - userId
                - contentId
              properties:
                title:
                  type: string
                content:
                  type: string
                userId:
                  type: string
                contentId:
                  type: string
      responses:
        '200':
          description: Article created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - missing required fields
        '500':
          description: Server error

  /api/comment:
    get:
      summary: Get all comments
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of all comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      type: object
        '500':
          description: Server error

  /api/comment/getAllByUser/{id}:
    get:
      summary: Get comments by user ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of comments for the specified user
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      type: object
        '400':
          description: Bad request - user ID required
        '500':
          description: Server error

  /api/comment/create:
    post:
      summary: Create a new comment
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
                - userId
                - articleId
              properties:
                content:
                  type: string
                userId:
                  type: string
                articleId:
                  type: string
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - missing required fields
        '500':
          description: Server error

  /api/content:
    get:
      summary: Get all contents
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of all contents
          content:
            application/json:
              schema:
                type: object
                properties:
                  contents:
                    type: array
                    items:
                      type: object
        '500':
          description: Server error

  /api/content/getAllByUser:
    get:
      summary: Get contents by user ID
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
      responses:
        '200':
          description: List of contents for the specified user
          content:
            application/json:
              schema:
                type: object
                properties:
                  contents:
                    type: array
                    items:
                      type: object
        '400':
          description: Bad request - user ID required
        '500':
          description: Server error

  /api/content/create:
    post:
      summary: Create new content
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - userId
              properties:
                title:
                  type: string
                userId:
                  type: string
      responses:
        '201':
          description: Content created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - missing required fields
        '500':
          description: Server error

  /api/user/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad request - missing credentials
        '401':
          description: Invalid credentials

  /api/user/register:
    post:
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - missing required fields

  /api/user/friends/getAll:
    get:
      summary: Get user's friends
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
      responses:
        '200':
          description: List of user's friends
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
        '400':
          description: Bad request - username required
        '500':
          description: Server error

  /api/user/friends/add:
    post:
      summary: Add friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - friendUsername
              properties:
                username:
                  type: string
                friendUsername:
                  type: string
      responses:
        '200':
          description: Friend added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - usernames required
        '500':
          description: Server error

  /api/user/updatePassword:
    post:
      summary: Update user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - password
              properties:
                userId:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - missing required fields
        '500':
          description: Server error